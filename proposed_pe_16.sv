// Generated by CIRCT firtool-1.75.0

module proposed_pe_16(	
  input         clock,	
  input  [7:0]  io_in_a,	
  input  [19:0] io_in_b,	
  input  [63:0] io_in_d,	
  output [7:0]  io_out_a,	
  output [7:0]  io_out_b,	
  output [63:0] io_out_c,	
  input         io_in_control_propagate,	
  output        io_out_control_propagate,	
  input  [2:0]  io_in_id,	
  output [2:0]  io_out_id,	
  input         io_in_last,	
  output        io_out_last,
  input         io_in_valid,
  output        io_out_valid
);

  wire [19:0] _mac_unit_io_out_d;

  reg  [31:0] c1_c = 0;
  reg  [31:0] c1_s = 0;	

  reg  [31:0] c2_c = 0;
  reg  [31:0] c2_s = 0;	
//   wire [31:0] _GEN_2 = {{12{_mac_unit_io_out_d[19]}}, _mac_unit_io_out_d};	

  always @(posedge clock) begin	
    if (io_in_valid) begin	
      c1 <= io_in_control_propagate ? {{12{io_in_d[19]}}, io_in_d} : _GEN_2;	
      c2 <= io_in_control_propagate ? _GEN_2 : {{12{io_in_d[19]}}, io_in_d};	
      last_s <= io_in_control_propagate;	
    end
  end // always @(posedge)

  MacUnit mac_unit (	
    .io_in_a  (io_in_a),
    .io_in_b  (io_in_b[7:0]),	
    .io_in_c  (io_in_control_propagate ? c2 : c1),	
    .io_out_d (_mac_unit_io_out_d)
  );	

  assign io_out_a = io_in_a;	
  assign io_out_b = io_in_b;	
  assign io_out_c = io_in_control_propagate ? ($signed(_io_out_c_T_2) > 32'sh7FFFF ? 20'h7FFFF : $signed(_io_out_c_T_2) < -32'sh80000 ? 20'h80000 : _io_out_c_T_2[19:0]) : $signed(_io_out_c_T_13) > 32'sh7FFFF ? 20'h7FFFF : $signed(_io_out_c_T_13) < -32'sh80000 ? 20'h80000 : _io_out_c_T_13[19:0];	// @[generators/gemmini/src/main/scala/gemmini/Arithmetic.scala:107:28, :125:{33,60}, generators/gemmini/src/main/scala/gemmini/PE.scala:31:7, :103:30, :104:16, :111:16, src/main/scala/chisel3/util/Mux.scala:126:16]
  assign io_out_control_dataflow = io_in_control_dataflow;	
  assign io_out_control_propagate = io_in_control_propagate;
  assign io_out_control_shift = io_in_control_shift;	
  assign io_out_id = io_in_id;	
  assign io_out_last = io_in_last;	
  assign io_out_valid = io_in_valid;
endmodule

